server {
        # 注意,想记录cookie数据,需要先在指定的server标签段中定义,然后再到nginx.conf中的http段去引用
        set $dm_cookie "";  
        if ($http_cookie ~* "(.+)(?:;|$)") {
            set $dm_cookie $1;
        }

        listen       80;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/access.log  main;

        #除了GET,POST,HEAD请求方法之外,别的方法一律禁止
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return    403;
        }

        # 配置拦截后拒绝访问时展示的页面，这里直接返回403。
        location /RequestDenied {
          return 403;
        }

        location / {
            SecRulesEnabled; #enable naxsi
            # 启用学习模式，即拦截请求后不拒绝访问，只将触发规则的请求写入日志
            #LearningMode; #enable learning mode
            LibInjectionSql; #enable libinjection support for SQLI
            LibInjectionXss; #enable libinjection support for XSS

            DeniedUrl "/RequestDenied"; #the location where naxsi will redirect the request when it is blocked
            CheckRule "$SQL >= 8" BLOCK; #the action to take when the $SQL score is superior or equal to 8
            CheckRule "$RFI >= 8" BLOCK;
            CheckRule "$TRAVERSAL >= 5" BLOCK;
            CheckRule "$UPLOAD >= 4" BLOCK;
            CheckRule "$XSS >= 8" BLOCK;
            error_log  logs/naxsi.log;

            proxy_pass http://app:8091;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #防止敏感文件被下载
        location ~* .(conf|bash_history|bash_profile|bashrc|xml|bak|sql|log|gz|zip|svn|git|inc|mdf|sh)$ {
            deny all;
        }

        #设置自定义缓存以限制缓冲区溢出攻击
        client_body_buffer_size  16K;

        client_header_buffer_size  1k;

        client_max_body_size  1m;

        large_client_header_buffers  4  8k;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}