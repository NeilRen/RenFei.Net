<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.renfei.dao.persistences.SecretKeyDOMapper">
  <resultMap id="BaseResultMap" type="net.renfei.dao.entity.SecretKeyDO">
    <id column="uid" jdbcType="BINARY" property="uid" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.renfei.dao.entity.SecretKeyDOWithBLOBs">
    <result column="server_private_key" jdbcType="LONGVARCHAR" property="serverPrivateKey" />
    <result column="client_public_key" jdbcType="LONGVARCHAR" property="clientPublicKey" />
    <result column="aes_key" jdbcType="LONGVARCHAR" property="aesKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, expire_time
  </sql>
  <sql id="Blob_Column_List">
    server_private_key, client_public_key, aes_key
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.renfei.dao.entity.SecretKeyDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.renfei.dao.entity.SecretKeyDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="byte[]" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_secret_key
    where uid = #{uid,jdbcType=BINARY}
  </select>
  <select id="selectByUid" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_secret_key
    where uid = unhex(replace(#{uid},'-',''))
  </select>
  <delete id="deleteByPrimaryKey" parameterType="byte[]">
    delete from t_secret_key
    where uid = #{uid,jdbcType=BINARY}
  </delete>
  <delete id="deleteByExample" parameterType="net.renfei.dao.entity.SecretKeyDOExample">
    delete from t_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.renfei.dao.entity.SecretKeyDOWithBLOBs">
    insert into t_secret_key (uid, expire_time, server_private_key, 
      client_public_key, aes_key)
    values (#{uid,jdbcType=BINARY}, #{expireTime,jdbcType=TIMESTAMP}, #{serverPrivateKey,jdbcType=LONGVARCHAR}, 
      #{clientPublicKey,jdbcType=LONGVARCHAR}, #{aesKey,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.renfei.dao.entity.SecretKeyDOWithBLOBs">
    insert into t_secret_key
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="serverPrivateKey != null">
        server_private_key,
      </if>
      <if test="clientPublicKey != null">
        client_public_key,
      </if>
      <if test="aesKey != null">
        aes_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        unhex(#{uid,jdbcType=BINARY}),
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverPrivateKey != null">
        #{serverPrivateKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="clientPublicKey != null">
        #{clientPublicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="aesKey != null">
        #{aesKey,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.renfei.dao.entity.SecretKeyDOExample" resultType="java.lang.Long">
    select count(*) from t_secret_key
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_secret_key
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BINARY},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serverPrivateKey != null">
        server_private_key = #{record.serverPrivateKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.clientPublicKey != null">
        client_public_key = #{record.clientPublicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.aesKey != null">
        aes_key = #{record.aesKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_secret_key
    set uid = #{record.uid,jdbcType=BINARY},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      server_private_key = #{record.serverPrivateKey,jdbcType=LONGVARCHAR},
      client_public_key = #{record.clientPublicKey,jdbcType=LONGVARCHAR},
      aes_key = #{record.aesKey,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_secret_key
    set uid = #{record.uid,jdbcType=BINARY},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.renfei.dao.entity.SecretKeyDOWithBLOBs">
    update t_secret_key
    <set>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="serverPrivateKey != null">
        server_private_key = #{serverPrivateKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="clientPublicKey != null">
        client_public_key = #{clientPublicKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="aesKey != null">
        aes_key = #{aesKey,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=BINARY}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.renfei.dao.entity.SecretKeyDOWithBLOBs">
    update t_secret_key
    set expire_time = #{expireTime,jdbcType=TIMESTAMP},
      server_private_key = #{serverPrivateKey,jdbcType=LONGVARCHAR},
      client_public_key = #{clientPublicKey,jdbcType=LONGVARCHAR},
      aes_key = #{aesKey,jdbcType=LONGVARCHAR}
    where uid = #{uid,jdbcType=BINARY}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.renfei.dao.entity.SecretKeyDO">
    update t_secret_key
    set expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=BINARY}
  </update>
</mapper>